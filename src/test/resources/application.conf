config {
  http-address = "0.0.0.0"
  http-port = 8080
  timeout = 20
  actor-system-name = "SteamReviewsMicroservice"
  n-threads = 8
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialization-bindings {
      "dev.galre.josue.steamreviews.service.utils.Serializable" = jackson-json
      "dev.galre.josue.steamreviews.service.utils.SnapshotSerializable" = jackson-cbor
    }
  }

  projection {
    cassandra {

      session-config-path = "akka.projection.cassandra.session-config"

      session-config {
        # The implementation of `akka.stream.alpakka.cassandra.CqlSessionProvider`
        # used for creating the `CqlSession`.
        # It may optionally have a constructor with an `ClassicActorSystemProvider` and `Config` parameters.
        session-provider = "akka.stream.alpakka.cassandra.DefaultSessionProvider"

        # Configure Akka Discovery by setting a service name
        service-discovery {
          name = ""
          lookup-timeout = 1 s
        }

        # The ExecutionContext to use for the session tasks and future composition.
        session-dispatcher = "akka.actor.default-dispatcher"

        # Full config path to the Datastax Java driver's configuration section.
        # When connecting to more than one Cassandra cluster different session configuration can be
        # defined with this property.
        # and https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/reference/
        datastax-java-driver-config = "datastax-java-driver"
      }

      offset-store {
        keyspace = "akka_projection"
        # the database table name for the offset store
        table = "offset_store"
        # the database table name for the projection manangement data
        management-table = "projection_management"
      }
    }
  }

  persistence {
    journal {
      plugin = "inmemory-journal"
    }
    snapshot-store {
      plugin = "inmemory-snapshot-store"
    }
    query {
      refresh-interval = 2s
    }
    events-by-tag {
      # for lower latency
      eventual-consistency-delay = 25ms
      flush-interval = 25ms
      pubsub-notification = on
    }
  }
}

datastax-java-driver {
  advanced {
    reconnect-on-init = true
  }
}