package dev.galre.josue.steamreviews
package controller

import akka.http.scaladsl.model.{ ContentTypes, StatusCodes }
import akka.http.scaladsl.server.Route
import akka.util.Timeout
import dev.galre.josue.steamreviews.service.utils.Actors
import dev.galre.josue.steamreviews.service.utils.Actors.StateManagers
import dev.galre.josue.steamreviews.spec.RoutesSpec

import scala.concurrent.duration._
import scala.concurrent.ExecutionContext

class CSVRouterTest extends RoutesSpec {

  Feature("A CSVRouterBehavior") {
    implicit val timeout = Timeout(10.seconds)

    implicit def executionContext: ExecutionContext = system.dispatcher

    val stateManagers: StateManagers = Actors.init
    val x = CSVRouter(stateManagers.Command.csvLoader)

    val routes: Route = CSVRouter(stateManagers.Command.csvLoader).routes

    Scenario("Trigger a small load") {
      Given("A csv file and a request to load")

      When("When the request to load is sent")
      val autoGeneratedSteamGameId = Get("/csv/load") ~!> routes ~> check {
        Then("The corresponding entries in the csv should have been loaded")
        assert(status == StatusCodes.OK)
      }

    }
  }
}
